{ 
	"$schema": "http://json-schema.org/schema#",

	"definitions": {
	
		"services": {
			"type": "object",
			"description": "A list of services that this node provides",
			"properties": {
				"provider": {
					"$ref": "#/definitions/provider"
				},
				"service_list": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/service"
					}
				},
				"required": [ "provider" ]
			}
		},
		
		"provider": {
			"type": "object",
			"description": "The description of a Provider of Services, i.e. a server node",
			"properties": {
				"name": { 
					"type": "string",
					"description": "Name of the provider"
				},
				"description": {
					"type": "string",
					"description": "More detailed information about the provider"			
				},
				"url": {
					"type": "string",
					"description": "Web address for more information",
					"format": "uri"
				},
				"required": [ "name", "description" ]
			}
		},
		
		"service": {
			"type": "object",
			"description": "The description of a service",
			"properties": {
				"name": { 
					"type": "string",
					"description": "Name of the service"
				},
				"description": {
					"type": "string",
					"description": "More detailed information about the service"			
				},
				"url": {
					"type": "string",
					"description": "Web address for more information about the service",
					"format": "uri"
				},
				"operations": {
					"type": "array",
					"description": "List of the available operations",
					"items": {
						"$ref": "#/definitions/operation"
					}
				},
				
				"required": [ "name", "description" ]
			}
		},
		
		"resource": {
			"type": "object",
			"description": "The description for the location and type of a data object e.g. file, url,  etc.",
			"properties": {
				"protocol": { 
					"type": "string",
					"description": "The protocol identifier e.g. http, file, dropbox, etc."
				},
				"value": {
					"type": "string",
					"description": "The path of the data object"			
				},
				"required": [ "protocol", "value" ]
			}
		},
		
		"parameter": {
			"type": "object",
			"description": "The full description of a parameter, this extends upon the API used by Swagger. See http://swagger.io/ for more information.",
			"properties": {
				"param": { 
					"type": "string",
					"description": "The name of the parameter."
				},
				"description": {
					"type": "string",
					"description": "The description of the parameter"			
				},
				"type": {
					"type": "string",
					"description":  "The type of the parameter as defined by Swagger", 
					"enum": [
						"string",
						"number",
						"integer",
						"boolean",
						"array"
					]			
				},
				"wheatis_type": {
					"type": "integer",
					"description": "A more finely-grained description of the parameter type. See ParameterType in parameter/lib/include/parameter.h"
				},
				"current_value": {
					"type": "object",
					"description": "The current value of the Parameter"
				},
				"default": {
					"type": "object",
					"description": "The default value of the Parameter"
				},
				"enum": {
					"type": "object",
					"description": "A list of the only valid values that this Parameter can take" 
				},
				"required": [ "param", "description", "type", "wheatis_type", "current_value" ]
			}
		},

		"operation": {
			"type": "object",
			"description": "The description of an Operation. See http://swagger.io/ for more information.",
			"properties": {
				"summary": { 
					"type": "string",
					"description": "A brief summary of the operation"
				},
				"operationId": {
					"type": "string",
					"description": "A friendly name of the operation"
				},
				"description": {
					"type": "string",
					"description":  "A longer description of the operation, github-flavored markdown is allowed."
				},
				"parameters": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/parameter"
					}					
				},
				
				"required": ["summary", "operationId", "description"]
			}
		},
		
    "credentials": {
      "type": "object",
      "description": "A collection describing a user's access tokens, passwords, etc. for given handlers/services",
      "properties": {
        "name": { 
          "type": "string",
          "description": "The name of the handler or authentication provider "
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The web address of the authentication provider"
        },
        "key": {
          "type": "string",
          "description":  "If using OAuth2, this is the client key token."
        },
        "secret": { 
          "type": "string",
          "description": "If using OAuth2, this is the client secret token."
        },
        "username": {
          "type": "string",
          "description": "The encrypted username to use"
        },
        "password": {
          "type": "string",
          "description":  "The encyrpyted password to go with the username"
        }
      }
		},
		
		"web_service": {
      "type": "object",
      "description": "A description of how to call a webservice",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The url to call for this webservice"
        }
        "format": {
          "type": "string",
          "description": "How the webservice parameters will be set",
					"enum": [
						"get",
						"post",
						"json"
					]			
        }
			},
			"service": {
				"$ref": "#/definitions/service"			
			}      
		},
		
		"response": {
      "type": "object",
      "description": "The server's response from having run a service",
      "properties": {
        "service": { 
          "type": "string",
          "description": "The name of the service"
        },
        "status": { 
          "type": "string",
          "description": "The status of the job on the service",
					"enum": [
						"waiting",
						"failed to start",
						"started",
						"finished",
						"failed"
					]		
        },
        "result": { 
          "type": "string",
          "description": "A value to be shown to the user"
        },
      }
		},
		
		"snp": {
			"type": "object",
      "description": "A snp's location on a contig",
      "properties": {
        "id": { 
          "type": "string",
          "description": "The id of this snp"        
        },
        "code": {
          "type": "string",
          "description": "The ambiguity code used for this snp"        
        },
        "translations": {
          "type": "array",
          "description": "The possible values of the nucleotide"
					"items": {
						"type": "string",
					}										
        },
        "map name": { 
          "type": "string",
          "description": "The name of this location e.g. AxC, SxR, etc."  
        },
        "location": { 
          "type": "number",
          "description": "The location of this snp on the contig"  
        },
        "cm": {
          "type": "number",
          "description": "The cM for this snp"        
        },        
      }		
		},
				
		"contig": {
			"type": "object",
      "description": "A contig sequence",
      "properties": {
        "name": { 
          "type": "string",
          "description": "The name of the contig"
        },
        "sequence": {
          "type": "string",
          "description": "The sequence of this contig"        
        },
        "snps": {
          "type": "array",
          "description": "The snps on this contig"
					"type": "array",
					"items": {
						"$ref": "#/definitions/snp"
					}	
        },
      }	
		}
	}
}
	

