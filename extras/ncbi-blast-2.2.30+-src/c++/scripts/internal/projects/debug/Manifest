#
# Filename: Manifest
#
# $Id: Manifest 435790 2014-05-20 18:47:00Z vakatov $
#
# Author: Sergey Satskiy
#
# Purpose: This file holds all the supported configurations of a package
#          It is used by release configurator.
#


# USE_DEFAULT_COMPONENTS

#APP: datatool

##COPY: $srcdir/include/corelib/hash_impl/*    $installdir/include/corelib/hash_impl/
##COPY: $srcdir/include/util/bitset/*.h        $installdir/include/util/bitset/
##COPY: $srcdir/src/util/checksum.cpp          $installdir/src/util/
##COPY: $srcdir/src/util/checksum.cpp          $installdir/src/util/my_checksum.cpp

#DEFAULT_CONFIGURATIONS: Linux32-Centos:plain-ICC  Linux64-Centos:plain-ICC  SunOSx86:plain-WS64

## APP: test_ncbi_disp -- not now

## Each line describes a single configuration
## The format is as follows:
## <HardwareIdentifier> : <ReleaseSuffix> : <CompilerConfigurationScriptWithKeys>
## Configuration script is relative to c++/compilers/unix/ .
## Release configurator assumes that this script will eventually call standard configure script and pass all options
## to it. So some standard options may be added by release configurator, such as --build-root-sfx, --with-projects,
## --with-distcc, --with-action etc.

#Linux32-Centos    : plain-ICC  : ICC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile
#Linux32-Centos    : plain-GCC  : GCC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile
#Linux32-Centos    : debug-GCC  : GCC.sh           --with-debug    --without-mt --with-static --without-runpath --with-flat-makefile

#Linux64-Centos    : plain-ICC  : ICC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile
#Linux64-Centos    : plain-GCC  : GCC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile

#FreeBSD32  : plain      : GCC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile

#SunOSx86   : plain-GCC  : GCC.sh           --without-debug --without-mt --with-static --without-runpath --with-flat-makefile
#SunOSx86   : plain-WS32 : WorkShop59.sh 32 --without-debug --without-mt --with-static --without-runpath --with-flat-makefile
#SunOSx86   : plain-WS64 : WorkShop59.sh 64 --without-debug --without-mt --with-static --without-runpath --with-flat-makefile

#PowerMAC   : universal  : GCC.sh           --with-universal --without-debug --without-mt --with-static --without-runpath --with-flat-makefile
## --with-flat-makefile is ommited for IntelMAC with the test purposes. Should
## work similar to the configurations where it is mentioned explicitly
#IntelMAC   : GCC        : GCC.sh           --with-universal --without-debug --without-mt --with-static --without-runpath

#Win32      : 800        : msvc800_prj  static  32  ReleaseDLL
#Win32      : 800d       : msvc800_prj  static  32  DebugDLL
#Win64      : plain      : msvc800_prj  static  64  ReleaseDLL
#Win64      : dll        : msvc800_prj  dll     64  ReleaseDLL
#Win32_9    : 900-32     : msvc900_prj  static  32  DebugDLL
#Win64_9    : 900-64     : msvc900_prj  static  64  ReleaseDLL
#Win64_9    : 900-64-dll : msvc900_prj  dll  64  ReleaseDLL

#XCode      : default : Xcode.sh 30


# --------------------------------
# Copy of the blast's Manifest

APP: blastp blastn blastx tblastn tblastx psiblast rpsblast rpstblastn
APP: makembindex segmasker dustmasker windowmasker
APP: makeblastdb blastdbcmd blastdb_aliastool convert2blastmask blastdbcheck

COPY: $srcdir/src/app/blast/legacy_blast.pl $installdir/bin
COPY: $srcdir/src/app/blast/update_blastdb.pl $installdir/bin

POSTBUILD: $srcdir/scripts/projects/blast/post_build/make_installers.py -v $version $platform $installdir


# Each line describes a single configuration
# The format is as follows:
# <HardwareIdentifier> : <ReleaseSuffix> :
# <CompilerConfigurationScriptWithKeys>
# Configuration script is relative to c++/compilers/unix/ .
# Release configurator assumes that this script will eventually call standard
# configure script and pass all options
# to it. So some standard options may be added by release configurator, such as
# --build-root-sfx, --with-projects,
# --with-distcc, --with-action etc.

# ICC gives us about 10% improvement in the core2 microarchitecture, so prefer
# that. The build-root is needed so that rpmbuild can find the proper
# directories
# to copy the binaries from
Linux32-Centos     : icc : ICC.sh            --without-debug --with-mt --with-flat-makefile --without-dll LDFLAGS=-static-libcxa
Linux64-Centos     : icc : ICC.sh            --without-debug --with-mt --with-flat-makefile

DEFAULT_CONFIGURATIONS: Linux32-Centos:icc Linux64-Centos:icc

Win32_10     : plain : static  32  ReleaseDLL
Win64_10     : plain : static  64  ReleaseDLL

SunOSx86    : plain : WorkShop59.sh 64  --without-debug --with-mt --with-flat-makefile

IntelMAC    : universal : GCC.sh        --without-debug --with-mt --with-flat-makefile --with-universal --with-ncbi-public

USE_COMPONENTS


