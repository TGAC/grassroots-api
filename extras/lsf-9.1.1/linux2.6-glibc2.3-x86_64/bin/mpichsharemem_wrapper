#!/bin/sh
# $RCSfile: mpichsharemem_wrapper,v $Revision: 1.3 $Date: 2013/01/10 05:55:45 $

#-------------------------------------------------------------------------
# Signal handling function: clean up and exit.
#-------------------------------------------------------------------------
mpichsharemem_exit()
{
    trap '' 1 2 3 15
    echo "Signal Received, Terminating the job<${UNIQUE_ID}>  ..."
    echo "Signal Received, Terminating the job<${UNIQUE_ID}>  ..." >>$LOGFILE
    exit 1
} #mpichsharemem_exit

#-------------------------------------------------------------------------
# Set up the variable LOGDIR representing the log file directory 
# - fill in your own choice of directory LOGDIR 
# - the log directory you choose must be accessible by the user from all hosts 
# - if the log directory is not specified, the log directory is /tmp 
#-------------------------------------------------------------------------
LOGDIR=""
if [ "$LOGDIR" = "" ]; then
    LOGDIR="/tmp"
fi

#-------------------------------------------------------------------------
# WE REMOVED THIS LINE FROM LAMMPI IS IT REALL Y  USED HERE
#-------------------------------------------------------------------------
NULLFILE="/dev/null"

#-------------------------------------------------------------------------
# EXIT_VALUE should not be set to 0
#-------------------------------------------------------------------------
EXIT_VALUE="66"

#-------------------------------------------------------------------------
# Create a log file with a unique name based on the LSF job ID 
#-------------------------------------------------------------------------
if [ -z "$LSB_JOBINDEX" -o "$LSB_JOBINDEX" = "0" ]; then
    UNIQUE_ID="$LSB_JOBID"
else
    UNIQUE_ID="$LSB_JOBID_$LSB_JOBINDEX"
fi

LOGFILE="${LOGDIR}/mpichsharemem_wrapper.job${UNIQUE_ID}.log"

#-------------------------------------------------------------------------
# Use the signal handling function to handle specific external signals. 
#-------------------------------------------------------------------------
trap mpichsharemem_exit 1 2 3 15

#-------------------------------------------------------------------------
# The job must run on a single host. If LSF has selected multiple hosts, advise # the user of the error and exit.
#-------------------------------------------------------------------------
hCount=`echo $LSB_MCPU_HOSTS | wc -w`
hCount=`expr $hCount`
if [ $hCount -eq 2 ]; then
    :
else
    echo "More than one hosts have been selected, please use bsub -R \"span[hosts=1]\" option."
    exit 55
fi

TotalCPUs=`echo $LSB_MCPU_HOSTS | awk '{print $2}'`
TotalCPUs=`expr $TotalCPUs`

#-------------------------------------------------------------------------
# Run the job
#-------------------------------------------------------------------------
echo "Your command line looks like:" >> $LOGFILE
echo $*  >> $LOGFILE

MPIRUN_DEVICE=ch_shmem
MPICH_NP=$TotalCPUs;export MPICH_NP
$*
EXIT_VALUE=$?

#-------------------------------------------------------------------------
# Clean up: exit with the exit value of the mpirun command
#-------------------------------------------------------------------------
echo "Job<${UNIQUE_ID}> exits with exit value $EXIT_VALUE." >>$LOGFILE 2>&1
exit $EXIT_VALUE

#-------------------------------------------------------------------------
# End the script.
#-------------------------------------------------------------------------
